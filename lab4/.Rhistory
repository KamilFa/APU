library("neuralnet")
output <- as.data.frame(runif(50, min = 1, max = 10))
input <- log(output^2)
library("neuralnet")
output <- as.data.frame(runif(50, min = 1, max = 10))
input <- log(output^2)
trainingData <- cbind(input, output)
colnames(trainingData) <- c("Input", "Output")
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
maxmindf <- as.data.frame(lapply(trainingData, normalize))
net.price <- neuralnet(Output~Input, maxmindf, hidden = c(4, 7, 3), threshold = 0.01)
plot(net.price)
library("neuralnet")
output <- as.data.frame(runif(50, min = 1, max = 10))
input <- log(output^2)
trainingData <- cbind(input, output)
colnames(trainingData) <- c("Input", "Output")
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
View(input)
View(input)
View(input)
View(input)
View(input)
View(output)
maxmindf <- as.data.frame(lapply(trainingData, normalize))
library("neuralnet")
output <- as.data.frame(runif(50, min = 1, max = 10))
input <- log(output^2)
trainingData <- cbind(input, output)
colnames(trainingData) <- c("Input", "Output")
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
maxmindf <- as.data.frame(lapply(trainingData, normalize))
net.price <- neuralnet(Output~Input, maxmindf, hidden = c(4, 5, 3), threshold = 0.01)
plot(net.price)
install.packages("c50")
install.packages("C50")
install.packages("C50")
install.packages("C50")
setwd("C:\Users\Kamil\Documents\Rstudio\lab4")
dane <- read.csv('lodowki.csv')
dane$Ocena <- factor(dane$Ocena)
head(dane)
treeModel <- C5.0(x=dane[,-6], y=dane$Ocena)
treeModel
summary(treeModel)
plot(treeModel)
library("C50")
library("C50")
setwd("C:\Users\Kamil\Documents\Rstudio\lab4")
setwd("C:\users\Kamil\Documents\Rstudio\lab4")
setwd("C:/Users/Kamil/Documents/Rstudio/lab4")
dane <- read.csv('lodowki.csv')
dane$Ocena <- factor(dane$Ocena)
head(dane)
treeModel <- C5.0(x=dane[,-6], y=dane$Ocena)
treeModel
summary(treeModel)
plot(treeModel)
library("C50")
library("MASS")
data(Aids2)
head(Aids2)
treeModel <- C5.0(x=Aids2[,-6], y=Aids2$T.categ)
treeModel
summary(treeModel)
plot(treeModel)
